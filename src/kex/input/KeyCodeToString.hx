package kex.input;

class KeyCodeToString {
	public static function keycodeToString( code: kha.input.KeyCode ) : String {
		return switch code {
			case Unknown: 'Unknown';
			case Back: 'Back';
			case Cancel: 'Cancel';
			case Help: 'Help';
			case Backspace: 'Backspace';
			case Tab: 'Tab';
			case Clear: 'Clear';
			case Return: 'Return';
			case Shift: 'Shift';
			case Control: 'Ctrl';
			case Alt: 'Alt';
			case Pause: 'Pause';
			case CapsLock: 'CapsLock';
			case Kana: 'Kana';
			// case Hangul: 'Hangul';
			case Eisu: 'Eisu';
			case Junja: 'Junja';
			case Final: 'Final';
			case Hanja: 'Hanja';
			// case Kanji: 'Kanji';
			case Escape: 'Esc';
			case Convert: 'Convert';
			case NonConvert: 'NonConvert';
			case Accept: 'Accept';
			case ModeChange: 'ModeChange';
			case Space: 'Space';
			case PageUp: 'PageUp';
			case PageDown: 'PageDown';
			case End: 'End';
			case Home: 'Home';
			case Left: 'Left';
			case Up: 'Up';
			case Right: 'Right';
			case Down: 'Down';
			case Select: 'Select';
			case Print: 'Print';
			case Execute: 'Execute';
			case PrintScreen: 'PrintScreen';
			case Insert: 'Insert';
			case Delete: 'Delete';
			case Colon: 'Colon';
			case Semicolon: 'Semicolon';
			case LessThan: 'LessThan';
			case Equals: 'Equals';
			case GreaterThan: 'GreaterThan';
			case QuestionMark: 'QuestionMark';
			case At: 'At';
			case Win: 'Win';
			case ContextMenu: 'ContextMenu';
			case Sleep: 'Sleep';
			case Numpad0: 'Numpad0';
			case Numpad1: 'Numpad1';
			case Numpad2: 'Numpad2';
			case Numpad3: 'Numpad3';
			case Numpad4: 'Numpad4';
			case Numpad5: 'Numpad5';
			case Numpad6: 'Numpad6';
			case Numpad7: 'Numpad7';
			case Numpad8: 'Numpad8';
			case Numpad9: 'Numpad9';
			case Multiply: 'Multiply';
			case Add: 'Add';
			case Separator: 'Separator';
			case Subtract: 'Subtract';
			case Decimal: 'Decimal';
			case Divide: 'Divide';
			case F1: 'F1';
			case F2: 'F2';
			case F3: 'F3';
			case F4: 'F4';
			case F5: 'F5';
			case F6: 'F6';
			case F7: 'F7';
			case F8: 'F8';
			case F9: 'F9';
			case F10: 'F10';
			case F11: 'F11';
			case F12: 'F12';
			case F13: 'F13';
			case F14: 'F14';
			case F15: 'F15';
			case F16: 'F16';
			case F17: 'F17';
			case F18: 'F18';
			case F19: 'F19';
			case F20: 'F20';
			case F21: 'F21';
			case F22: 'F22';
			case F23: 'F23';
			case F24: 'F24';
			case NumLock: 'NumLock';
			case ScrollLock: 'ScrollLock';
			case WinOemFjJisho: 'WinOemFjJisho';
			case WinOemFjMasshou: 'WinOemFjMasshou';
			case WinOemFjTouroku: 'WinOemFjTouroku';
			case WinOemFjLoya: 'WinOemFjLoya';
			case WinOemFjRoya: 'WinOemFjRoya';
			case Circumflex: 'Circumflex';
			case Exclamation: 'Exclamation';
			case DoubleQuote: 'DoubleQuote';
			case Hash: 'Hash';
			case Dollar: 'Dollar';
			case Percent: 'Percent';
			case Ampersand: 'Ampersand';
			case Underscore: 'Underscore';
			case OpenParen: 'OpenParen';
			case CloseParen: 'CloseParen';
			case Asterisk: 'Asterisk';
			case Plus: 'Plus';
			case Pipe: 'Pipe';
			case HyphenMinus: 'HyphenMinus';
			case OpenCurlyBracket: 'OpenCurlyBracket';
			case CloseCurlyBracket: 'CloseCurlyBracket';
			case Tilde: 'Tilde';
			case VolumeMute: 'VolumeMute';
			case VolumeDown: 'VolumeDown';
			case VolumeUp: 'VolumeUp';
			case Comma: 'Comma';
			case Period: 'Period';
			case Slash: 'Slash';
			case BackQuote: 'BackQuote';
			case OpenBracket: 'OpenBracket';
			case BackSlash: 'BackSlash';
			case CloseBracket: 'CloseBracket';
			case Quote: 'Quote';
			case Meta: 'Meta';
			case AltGr: 'AltGr';
			case WinIcoHelp: 'WinIcoHelp';
			case WinIco00: 'WinIco00';
			case WinIcoClear: 'WinIcoClear';
			case WinOemReset: 'WinOemReset';
			case WinOemJump: 'WinOemJump';
			case WinOemPA1: 'WinOemPA1';
			case WinOemPA2: 'WinOemPA2';
			case WinOemPA3: 'WinOemPA3';
			case WinOemWSCTRL: 'WinOemWSCTRL';
			case WinOemCUSEL: 'WinOemCUSEL';
			case WinOemATTN: 'WinOemATTN';
			case WinOemFinish: 'WinOemFinish';
			case WinOemCopy: 'WinOemCopy';
			case WinOemAuto: 'WinOemAuto';
			case WinOemENLW: 'WinOemENLW';
			case WinOemBackTab: 'WinOemBackTab';
			case ATTN: 'ATTN';
			case CRSEL: 'CRSEL';
			case EXSEL: 'EXSEL';
			case EREOF: 'EREOF';
			case Play: 'Play';
			case Zoom: 'Zoom';
			case PA1: 'PA1';
			case WinOemClear: 'WinOemClear';
			case _: String.fromCharCode(code);
		}
	}
}
